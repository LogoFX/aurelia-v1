import { IProductProvider } from "data/providers/contracts";
import { ProductDto } from "data/dto";

/**
 * 
 * Represents a fake implementation of the IProductProvider interface.
 * 
 */
export class ProductProvider implements IProductProvider {

  private dtos: ProductDto[] = [];

  constructor() {  
      this.init();
  }

  public async getAsync(id?: string): Promise<ProductDto[]> {
    return new Promise(resolve => {
      if (id) {
        resolve(this.dtos.filter(item => item.id === id));
      }        
      else {
        resolve(this.dtos);
      }
    });    
  }

  public async postAsync(productDto: ProductDto): Promise<void> {
    throw new Error("Method not implemented.");
  }

  public async putAsync(productDto: ProductDto): Promise<void> {
    throw new Error("Method not implemented.");
  }
  
  public async deleteAsync(id?: string): Promise<void> {
    throw new Error("Method not implemented.");
  }

  private init() {

    let product: ProductDto;

    for (let i = 0; i < 5; i++) {
      product = new ProductDto();
      product.id = `p${i.toString()}`;
      product.name = `Product #${i.toString()}`;
      this.dtos.push(product);
    }
  }
  
}