import {build} from 'aurelia-cli';
// @if babel
import gulp from 'gulp';
import project from '../aurelia.json';
// @if less || stylus
import plumber from 'gulp-plumber';
import notify from 'gulp-notify';
// @endif
// @if less
import less from 'gulp-less';
// @endif
// @if sass
import sass from 'gulp-dart-sass';
// @endif
// @if stylus
import stylus from 'gulp-stylus';
// @endif
// @if postcss-basic || postcss-typical
import postcss from 'gulp-postcss';
import autoprefixer from 'autoprefixer';
// @endif
// @if postcss-typical
import cssnano from 'cssnano';
import postcssUrl from 'postcss-url';
// @endif
// @endif
// @if typescript
import * as gulp from 'gulp';
import * as project from '../aurelia.json';
// @if less || stylus
import * as plumber from 'gulp-plumber';
import * as notify from 'gulp-notify';
// @endif
// @if less
import * as less from 'gulp-less';
// @endif
// @if sass
import * as sass from 'gulp-dart-sass';
// @endif
// @if stylus
import * as stylus from 'gulp-stylus';
// @endif
// @if postcss-basic || postcss-typical
import * as postcss from 'gulp-postcss';
import * as autoprefixer from 'autoprefixer';
// @endif
// @if postcss-typical
import * as cssnano from 'cssnano';
import * as postcssUrl from 'postcss-url';
// @endif
// @endif

export default function processCSS() {
  return gulp.src(project.cssProcessor.source, {sourcemaps: true/* @if !less && !sass && !stylus */, since: gulp.lastRun(processCSS)/* @endif */})
    // @if less || stylus
    .pipe(plumber({ errorHandler: notify.onError('Error: <%= error.message %>') }))
    // @endif
    // @if less
    .pipe(less())
    // @endif
    // @if sass
    .pipe(sass.sync().on('error', sass.logError))
    // @endif
    // @if stylus
    .pipe(stylus())
    // @endif
    // @if postcss-basic
    .pipe(postcss([
      autoprefixer()
    ]))
    // @endif
    // @if postcss-typical
    .pipe(postcss([
      autoprefixer(),
      postcssUrl({url: 'inline', encodeType: 'base64'}),
      cssnano()
    ]))
    // @endif
    .pipe(build.bundle());
}

// @if plugin
export function pluginCSS(dest) {
  return function processPluginCSS() {
    return gulp.src(project.plugin.source.css)
      // @if less || stylus
      .pipe(plumber({ errorHandler: notify.onError('Error: <%= error.message %>') }))
      // @endif
      // @if less
      .pipe(less())
      // @endif
      // @if sass
      .pipe(sass.sync().on('error', sass.logError))
      // @endif
      // @if stylus
      .pipe(stylus())
      // @endif
      // @if postcss-basic
      .pipe(postcss([
        autoprefixer()
      ]))
      // @endif
      // @if postcss-typical
      .pipe(postcss([
        autoprefixer(),
        postcssUrl({url: 'inline', encodeType: 'base64'}),
        cssnano()
      ]))
      // @endif
      .pipe(gulp.dest(dest));
  };
}
// @endif
